"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDocument = exports.FigmaRestApi = exports.getHeaders = exports.getApiUrl = void 0;
const axios_1 = __importStar(require("axios"));
const logging_1 = require("../common/logging");
const version = require('../../package.json').version;
function getApiUrl(figmaNode) {
    return 'https://api.figma.com/v1';
}
exports.getApiUrl = getApiUrl;
function getHeaders(accessToken) {
    return {
        'X-Figma-Token': accessToken,
        'Content-Type': 'application/json',
        'User-Agent': `code-connect-cli/${version}`,
    };
}
exports.getHeaders = getHeaders;
// These typings are a subset of the Figma REST API
var FigmaRestApi;
(function (FigmaRestApi) {
    let ComponentPropertyType;
    (function (ComponentPropertyType) {
        ComponentPropertyType["Boolean"] = "BOOLEAN";
        ComponentPropertyType["InstanceSwap"] = "INSTANCE_SWAP";
        ComponentPropertyType["Text"] = "TEXT";
        ComponentPropertyType["Variant"] = "VARIANT";
    })(ComponentPropertyType = FigmaRestApi.ComponentPropertyType || (FigmaRestApi.ComponentPropertyType = {}));
})(FigmaRestApi || (exports.FigmaRestApi = FigmaRestApi = {}));
async function getDocument(url, accessToken) {
    try {
        logging_1.logger.info('Fetching component information from Figma...');
        const response = await axios_1.default.get(url, {
            headers: getHeaders(accessToken),
        });
        if (response.status === 200) {
            logging_1.logger.info('Successfully fetched component information from Figma');
            return response.data.document;
        }
        else {
            logging_1.logger.error(`Failed to get node information from Figma with status: ${response.status}`);
            logging_1.logger.debug('Failed to get node information from Figma with Body:', response.data);
            return Promise.reject();
        }
    }
    catch (err) {
        if ((0, axios_1.isAxiosError)(err)) {
            if (err.response) {
                logging_1.logger.error(`Failed to get node data from Figma (${err.code}): ${err.response?.status} ${err.response?.data?.err ?? err.response?.data?.message}`);
            }
            else {
                logging_1.logger.error(`Failed to get node data from Figma: ${err.message}`);
            }
            logging_1.logger.debug(JSON.stringify(err.response?.data));
        }
        else {
            logging_1.logger.error(`Failed to create: ${err}`);
        }
        return Promise.reject();
    }
}
exports.getDocument = getDocument;
//# sourceMappingURL=figma_rest_api.js.map