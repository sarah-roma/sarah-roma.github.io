"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoLinkComponents = void 0;
const fast_fuzzy_1 = require("fast-fuzzy");
const path_1 = __importDefault(require("path"));
const MINIMUM_MATCH_THRESHOLD = 0.8;
/**
 * Autolinks components/paths based on fuzzy matching of name and writes mappings to linkedNodeIdsToPaths.
 *
 * Matching is done by fast-fuzzy
 */
function autoLinkComponents({ unconnectedComponents, linkedNodeIdsToPaths, componentPaths, }) {
    const pathMatchScores = {};
    /**
     * fast-fuzzy finds best match in filenames for a given component - this function
     * allows us to replace that link if a closer match is found
     */
    function isBestMatchForPath(match) {
        return !pathMatchScores[match.item] || match.score > pathMatchScores[match.item].score;
    }
    const matchableFilenameToPathMap = componentPaths.reduce((acc, componentPath) => {
        const { name } = path_1.default.parse(componentPath);
        const matchableName = name;
        acc[matchableName] = componentPath;
        return acc;
    }, {});
    const searchSpace = Object.keys(matchableFilenameToPathMap);
    const searcher = new fast_fuzzy_1.Searcher(searchSpace);
    unconnectedComponents.forEach((component) => {
        const matchableName = component.name;
        const results = searcher.search(matchableName, { returnMatchData: true });
        const bestMatch = results[0];
        const filepath = bestMatch?.item;
        if (bestMatch &&
            bestMatch.score > MINIMUM_MATCH_THRESHOLD &&
            filepath in matchableFilenameToPathMap &&
            isBestMatchForPath(bestMatch)) {
            linkedNodeIdsToPaths[component.id] = matchableFilenameToPathMap[bestMatch.item];
            pathMatchScores[bestMatch.item] = { nodeId: component.id, score: bestMatch.score };
        }
    });
}
exports.autoLinkComponents = autoLinkComponents;
//# sourceMappingURL=autolinking.js.map